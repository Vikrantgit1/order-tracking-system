services:
  postgres:
    image: postgres:16
    container_name: orders-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: orders
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data   # <-- named volume

  zookeeper:
    image: bitnami/zookeeper:3.9
    container_name: kafka-zookeeper
    restart: unless-stopped
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes" 
    ports:
      - "2181:2181"

  kafka:
    image: bitnami/kafka:3.7
    container_name: kafka-broker
    restart: unless-stopped
    ports:
      - "9092:9092"
    environment:
      # ---- core settings ----
      KAFKA_CFG_BROKER_ID: 1
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      ALLOW_PLAINTEXT_LISTENER: "yes"

      # ---- listeners ----
      # Listener inside Docker network
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092
      # What the broker tells *external* clients to use
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
    depends_on:
      - zookeeper


  redis:
    image: redis:7
    container_name: cache-redis
    restart: unless-stopped
    ports:
      - "6379:6379"

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-storage:/var/lib/grafana

volumes:
  postgres_data:
  grafana-storage:         # <-- this defines the named volume
